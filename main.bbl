% Generated by IEEEtran.bst, version: 1.13 (2008/09/30)
\begin{thebibliography}{10}
\providecommand{\url}[1]{#1}
\csname url@samestyle\endcsname
\providecommand{\newblock}{\relax}
\providecommand{\bibinfo}[2]{#2}
\providecommand{\BIBentrySTDinterwordspacing}{\spaceskip=0pt\relax}
\providecommand{\BIBentryALTinterwordstretchfactor}{4}
\providecommand{\BIBentryALTinterwordspacing}{\spaceskip=\fontdimen2\font plus
\BIBentryALTinterwordstretchfactor\fontdimen3\font minus
  \fontdimen4\font\relax}
\providecommand{\BIBforeignlanguage}[2]{{%
\expandafter\ifx\csname l@#1\endcsname\relax
\typeout{** WARNING: IEEEtran.bst: No hyphenation pattern has been}%
\typeout{** loaded for the language `#1'. Using the pattern for}%
\typeout{** the default language instead.}%
\else
\language=\csname l@#1\endcsname
\fi
#2}}
\providecommand{\BIBdecl}{\relax}
\BIBdecl

\bibitem{chen2016empirical}
J.~Chen, W.~Hu, D.~Hao, Y.~Xiong, H.~Zhang, L.~Zhang, and B.~Xie, ``An
  empirical comparison of compiler testing techniques,'' in \emph{Proceedings
  of the 38th International Conference on Software Engineering}, 2016.

\bibitem{hoste2008cole}
K.~Hoste and L.~Eeckhout, ``Cole: compiler optimization level exploration,'' in
  \emph{Proceedings of the 6th annual IEEE/ACM international symposium on Code
  generation and optimization}.\hskip 1em plus 0.5em minus 0.4em\relax ACM,
  2008, pp. 165--174.

\bibitem{le2014compiler}
V.~Le, M.~Afshari, and Z.~Su, ``Compiler validation via equivalence modulo
  inputs,'' in \emph{ACM SIGPLAN Notices}, vol.~49, no.~6.\hskip 1em plus 0.5em
  minus 0.4em\relax ACM, 2014, pp. 216--226.

\bibitem{almagor2004finding}
L.~Almagor, K.~D. Cooper, A.~Grosul, T.~J. Harvey, S.~W. Reeves,
  D.~Subramanian, L.~Torczon, and T.~Waterman, ``Finding effective compilation
  sequences,'' \emph{ACM SIGPLAN Notices}, vol.~39, no.~7, pp. 231--239, 2004.

\bibitem{pan2006fast}
Z.~Pan and R.~Eigenmann, ``Fast and effective orchestration of compiler
  optimizations for automatic performance tuning,'' in \emph{Code Generation
  and Optimization, 2006. CGO 2006. International Symposium on}.\hskip 1em plus
  0.5em minus 0.4em\relax IEEE, 2006, pp. 12--pp.

\bibitem{molyneaux2009art}
I.~Molyneaux, \emph{The Art of Application Performance Testing: Help for
  Programmers and Quality Assurance}.\hskip 1em plus 0.5em minus 0.4em\relax "
  O'Reilly Media, Inc.", 2009.

\bibitem{ballal2015compiler}
P.~A. Ballal, H.~Sarojadevi, and P.~Harsha, ``Compiler optimization: A genetic
  algorithm approach,'' \emph{International Journal of Computer Applications},
  vol. 112, no.~10, 2015.

\bibitem{chen2012deconstructing}
Y.~Chen, S.~Fang, Y.~Huang, L.~Eeckhout, G.~Fursin, O.~Temam, and C.~Wu,
  ``Deconstructing iterative optimization,'' \emph{ACM Transactions on
  Architecture and Code Optimization (TACO)}, vol.~9, no.~3, p.~21, 2012.

\bibitem{demertzi2011analyzing}
M.~Demertzi, M.~Annavaram, and M.~Hall, ``Analyzing the effects of compiler
  optimizations on application reliability,'' in \emph{Workload
  Characterization (IISWC), 2011 IEEE International Symposium on}.\hskip 1em
  plus 0.5em minus 0.4em\relax IEEE, 2011, pp. 184--193.

\bibitem{nagiub2013automatic}
M.~Nagiub and W.~Farag, ``Automatic selection of compiler options using genetic
  techniques for embedded software design,'' in \emph{Computational
  Intelligence and Informatics (CINTI), 2013 IEEE 14th International Symposium
  on}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2013, pp. 69--74.

\bibitem{lehman2008exploiting}
J.~Lehman and K.~O. Stanley, ``Exploiting open-endedness to solve problems
  through the search for novelty.'' in \emph{ALIFE}, 2008, pp. 329--336.

\bibitem{chen2010evaluating}
Y.~Chen, Y.~Huang, L.~Eeckhout, G.~Fursin, L.~Peng, O.~Temam, and C.~Wu,
  ``Evaluating iterative optimization across 1000 datasets,'' in \emph{ACM
  Sigplan Notices}, vol.~45, no.~6.\hskip 1em plus 0.5em minus 0.4em\relax ACM,
  2010, pp. 448--459.

\bibitem{escobar2015evaluation}
R.~D. Escobar, A.~R. Angula, and M.~Corsi, ``Evaluation of gcc optimization
  parameters,'' \emph{Revista Ingenierias USBmed}, vol.~3, no.~2, pp. 31--39,
  2015.

\bibitem{zhong2009tuning}
S.~Zhong, Y.~Shen, and F.~Hao, ``Tuning compiler optimization options via
  simulated annealing,'' in \emph{Future Information Technology and Management
  Engineering, 2009. FITME'09. Second International Conference On}.\hskip 1em
  plus 0.5em minus 0.4em\relax IEEE, 2009, pp. 305--308.

\bibitem{sandran2012genetic}
T.~Sandran, M.~N.~B. Zakaria, and A.~J. Pal, ``A genetic algorithm approach
  towards compiler flag selection based on compilation and execution
  duration,'' in \emph{Computer \& Information Science (ICCIS), 2012
  International Conference on}, vol.~1.\hskip 1em plus 0.5em minus 0.4em\relax
  IEEE, 2012, pp. 270--274.

\bibitem{martins2014exploration}
L.~G. Martins, R.~Nobre, A.~C. Delbem, E.~Marques, and J.~M. Cardoso,
  ``Exploration of compiler optimization sequences using clustering-based
  selection,'' in \emph{Proceedings of the 2014 SIGPLAN/SIGBED conference on
  Languages, compilers and tools for embedded systems}.\hskip 1em plus 0.5em
  minus 0.4em\relax ACM, 2014, pp. 63--72.

\bibitem{yang2011finding}
X.~Yang, Y.~Chen, E.~Eide, and J.~Regehr, ``Finding and understanding bugs in c
  compilers,'' in \emph{ACM SIGPLAN Notices}, vol.~46, no.~6.\hskip 1em plus
  0.5em minus 0.4em\relax ACM, 2011, pp. 283--294.

\bibitem{mboussaa}
``Notice settings,'' \url{https://noticegcc.wordpress.com/}.

\bibitem{banzhaf1996effect}
W.~Banzhaf, F.~D. Francone, and P.~Nordin, ``The effect of extensive use of the
  mutation operator on generalization in genetic programming using sparse data
  sets,'' in \emph{Parallel Problem Solving from Natureâ€”PPSN IV}.\hskip 1em
  plus 0.5em minus 0.4em\relax Springer, 1996, pp. 300--309.

\bibitem{gathercole1996adverse}
C.~Gathercole and P.~Ross, ``An adverse interaction between crossover and
  restricted tree depth in genetic programming,'' in \emph{Proceedings of the
  1st annual conference on genetic programming}.\hskip 1em plus 0.5em minus
  0.4em\relax MIT Press, 1996, pp. 291--296.

\bibitem{cooper2002adaptive}
K.~D. Cooper, D.~Subramanian, and L.~Torczon, ``Adaptive optimizing compilers
  for the 21st century,'' \emph{The Journal of Supercomputing}, vol.~23, no.~1,
  pp. 7--22, 2002.

\bibitem{lokuciejewski2010multi}
P.~Lokuciejewski, S.~Plazar, H.~Falk, P.~Marwedel, and L.~Thiele,
  ``Multi-objective exploration of compiler optimizations for real-time
  systems,'' in \emph{Object/Component/Service-Oriented Real-Time Distributed
  Computing (ISORC), 2010 13th IEEE International Symposium on}.\hskip 1em plus
  0.5em minus 0.4em\relax IEEE, 2010, pp. 115--122.

\bibitem{deb2002fast}
K.~Deb, A.~Pratap, S.~Agarwal, and T.~Meyarivan, ``A fast and elitist
  multiobjective genetic algorithm: Nsga-ii,'' \emph{Evolutionary Computation,
  IEEE Transactions on}, vol.~6, no.~2, pp. 182--197, 2002.

\bibitem{nethercote2007valgrind}
N.~Nethercote and J.~Seward, ``Valgrind: a framework for heavyweight dynamic
  binary instrumentation,'' in \emph{ACM Sigplan notices}, vol.~42,
  no.~6.\hskip 1em plus 0.5em minus 0.4em\relax ACM, 2007, pp. 89--100.

\bibitem{nagai2013scaling}
E.~Nagai, A.~Hashimoto, and N.~Ishiura, ``Scaling up size and number of
  expressions in random testing of arithmetic optimization of c compilers,'' in
  \emph{Workshop on Synthesis And System Integration of Mixed Information
  Technologies (SASIMI 2013)}, 2013, pp. 88--93.

\bibitem{inden2013examination}
B.~Inden, Y.~Jin, R.~Haschke, H.~Ritter, and B.~Sendhoff, ``An examination of
  different fitness and novelty based selection methods for the evolution of
  neural networks,'' \emph{Soft Computing}, vol.~17, no.~5, pp. 753--767, 2013.

\bibitem{martinez2014multi}
A.~Mart{\'\i}nez-{\'A}lvarez, J.~Calvo-Zaragoza, S.~Cuenca-Asensi, A.~Ortiz,
  and A.~Jimeno-Morenilla, ``Multi-objective adaptive evolutionary strategy for
  tuning compilations,'' \emph{Neurocomputing}, vol. 123, pp. 381--389, 2014.

\bibitem{pallister2015identifying}
J.~Pallister, S.~J. Hollis, and J.~Bennett, ``Identifying compiler options to
  minimize energy consumption for embedded platforms,'' \emph{The Computer
  Journal}, vol.~58, no.~1, pp. 95--109, 2015.

\bibitem{fursin2008milepost}
G.~Fursin, C.~Miranda, O.~Temam, M.~Namolaru, E.~Yom-Tov, A.~Zaks,
  B.~Mendelson, E.~Bonilla, J.~Thomson, H.~Leather \emph{et~al.}, ``Milepost
  gcc: machine learning based research compiler,'' in \emph{GCC Summit}, 2008.

\bibitem{lin2008automatic}
S.-C. Lin, C.-K. Chang, and S.-C. Lin, ``Automatic selection of gcc
  optimization options using a gene weighted genetic algorithm,'' in
  \emph{Computer Systems Architecture Conference, 2008. ACSAC 2008. 13th
  Asia-Pacific}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2008, pp. 1--8.

\bibitem{schulte2014post}
E.~Schulte, J.~Dorn, S.~Harding, S.~Forrest, and W.~Weimer, ``Post-compiler
  software optimization for reducing energy,'' in \emph{ACM SIGARCH Computer
  Architecture News}, vol.~42, no.~1.\hskip 1em plus 0.5em minus 0.4em\relax
  ACM, 2014, pp. 639--652.

\bibitem{risi2010evolving}
S.~Risi, C.~E. Hughes, and K.~O. Stanley, ``Evolving plastic neural networks
  with novelty search,'' \emph{Adaptive Behavior}, vol.~18, no.~6, pp.
  470--491, 2010.

\bibitem{krvcah2012solving}
P.~Kr{\v{c}}ah, ``Solving deceptive tasks in robot body-brain co-evolution by
  searching for behavioral novelty,'' in \emph{Advances in Robotics and Virtual
  Reality}.\hskip 1em plus 0.5em minus 0.4em\relax Springer, 2012, pp.
  167--186.

\bibitem{boussaa2015novelty}
M.~Boussaa, O.~Barais, G.~Suny{\'e}, and B.~Baudry, ``A novelty search approach
  for automatic test data generation,'' in \emph{8th International Workshop on
  Search-Based Software Testing SBST@ ICSE 2015}, 2015, p.~4.

\bibitem{stuermer2007systematic}
I.~Stuermer, M.~Conrad, H.~Doerr, and P.~Pepper, ``Systematic testing of
  model-based code generators,'' \emph{Software Engineering, IEEE Transactions
  on}, vol.~33, no.~9, pp. 622--634, 2007.

\end{thebibliography}
